# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Zipper staticZipper Zipper-static Zipper-test)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target Zipper
add_library(Zipper SHARED IMPORTED)

set_target_properties(Zipper PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/climatex/Lx_Workspace/Qt_workspace/wordx/zipper"
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libz.so"
)

# Create imported target staticZipper
add_library(staticZipper STATIC IMPORTED)

set_target_properties(staticZipper PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/climatex/Lx_Workspace/Qt_workspace/wordx/zipper"
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libz.so"
)

# Create imported target Zipper-static
add_library(Zipper-static STATIC IMPORTED)

set_target_properties(Zipper-static PROPERTIES
  INTERFACE_LINK_LIBRARIES "/usr/lib/x86_64-linux-gnu/libz.so"
)

# Create imported target Zipper-test
add_executable(Zipper-test IMPORTED)

# Import target "Zipper" for configuration "Release"
set_property(TARGET Zipper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Zipper PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/climatex/Lx_Workspace/Qt_workspace/wordx/build/zipper/libZipper.so.1.0.4"
  IMPORTED_SONAME_RELEASE "libZipper.so.1"
  )

# Import target "staticZipper" for configuration "Release"
set_property(TARGET staticZipper APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(staticZipper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C;CXX"
  IMPORTED_LOCATION_RELEASE "/home/climatex/Lx_Workspace/Qt_workspace/wordx/build/zipper/libZipper.a"
  )

# Import target "Zipper-static" for configuration "Release"
set_property(TARGET Zipper-static APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Zipper-static PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C;CXX"
  IMPORTED_LOCATION_RELEASE "/home/climatex/Lx_Workspace/Qt_workspace/wordx/build/zipper/libZipper-static.a"
  )

# Import target "Zipper-test" for configuration "Release"
set_property(TARGET Zipper-test APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Zipper-test PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/climatex/Lx_Workspace/Qt_workspace/wordx/build/zipper/Zipper-test"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
